
#include<iostream>
#include<vector>
#include<bits/stdc++.h>
using namespace std;

void Bucket_Sort(float arr[],int size)
{
    vector<vector<float>>Bucket(size,vector<float>());

   //Finding range
    float max_ele =arr[0];
    float min_ele = arr[0];
    for(int i = 0;i<size;i++)
    {
        max_ele =max(max_ele,arr[i]);
        min_ele =min(min_ele,arr[i]);
    }
    float range =(max_ele - min_ele)/size;
    //inserting elements into the bucket
    for(int i = 0;i<size;i++)
    {
        int index = (arr[i]-min_ele)/range;
        //Boundary elements
        float diff =  (arr[i]-min_ele)/range - index;
        if(diff == 0 &&arr[i] != min_ele)
        {
           Bucket[index - 1].push_back(arr[i]);
        }
        else
       {
           Bucket[index].push_back(arr[i]);
       }

        //sorting the individual buckets
        for(int i = 0;i<size;i++)
        {
            if(!Bucket[i].empty())
            sort(Bucket[i].begin(),Bucket[i].end());
        }

        //Combining elements for the buckets
          int k = 0;
        for(int i = 0;i<size;i++)
        {
            for(int j = 0;j<Bucket[i].size();j++)
            {
               arr[k++] = Bucket[i][j];
            }
        }
    }
}

int main()
{
    float arr[] = {0.13,0.45,0.89,0.12,0.75,0.63,0.85,0.39};
    int n = sizeof(arr)/sizeof(arr[0]);
    Bucket_Sort(arr,n);
    for(int i = 0;i<n;i++)
    {
        cout<<arr[i]<<" ";
    }
    return 0;
}
